{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R1\\\\Downloads\\\\mcq-system-full\\\\frontend\\\\src\\\\pages\\\\ExamPage.jsx\",\n  _s = $RefreshSig$();\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExamPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [exam, setExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n\n  // Fetch the exam by ID from backend\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/exams/${id}`).then(res => setExam(res.data));\n  }, [id]);\n\n  // When user submits the exam\n  const handleSubmit = async () => {\n    const payload = {\n      user: 'Anonymous',\n      exam_id: exam._id,\n      answers: exam.questions.map(q => ({\n        question_id: q._id,\n        // Must match exactly with DB _id\n        selected_option: answers[q._id]\n      }))\n    };\n    try {\n      const res = await axios.post('http://localhost:5000/api/results', payload);\n      navigate('/result', {\n        state: {\n          score: res.data.score\n        }\n      });\n    } catch (err) {\n      console.error('Submit error:', err);\n    }\n  };\n  return exam ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: exam.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), exam.questions.map((q, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [i + 1, \". \", q.question_text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), q.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: q._id,\n          value: idx,\n          onChange: () => setAnswers({\n            ...answers,\n            [q._id.toString()]: idx\n          }) // ✅ Use string key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), opt]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))]\n    }, q._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this);\n}\n_s(ExamPage, \"R5xjSDjqXoa9hWkalIpw1Co282Y=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["useParams","useNavigate","useEffect","useState","axios","jsxDEV","_jsxDEV","ExamPage","_s","id","exam","setExam","answers","setAnswers","navigate","get","then","res","data","handleSubmit","payload","user","exam_id","_id","questions","map","q","question_id","selected_option","post","state","score","err","console","error","children","title","fileName","_jsxFileName","lineNumber","columnNumber","i","question_text","options","opt","idx","style","display","type","name","value","onChange","toString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/R1/Downloads/mcq-system-full/frontend/src/pages/ExamPage.jsx"],"sourcesContent":["import { useParams, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function ExamPage() {\n  const { id } = useParams();\n  const [exam, setExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n\n  // Fetch the exam by ID from backend\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/exams/${id}`)\n      .then(res => setExam(res.data));\n  }, [id]);\n\n  // When user submits the exam\n  const handleSubmit = async () => {\n  const payload = {\n    user: 'Anonymous',\n    exam_id: exam._id,\n    answers: exam.questions.map(q => ({\n      question_id: q._id, // Must match exactly with DB _id\n      selected_option: answers[q._id]\n    }))\n  };\n\n  try {\n    const res = await axios.post('http://localhost:5000/api/results', payload);\n    navigate('/result', { state: { score: res.data.score } });\n  } catch (err) {\n    console.error('Submit error:', err);\n  }\n};\n\n\n  return exam ? (\n    <div>\n      <h2>{exam.title}</h2>\n      {exam.questions.map((q, i) => (\n        <div key={q._id}>\n          <p>{i + 1}. {q.question_text}</p>\n          {q.options.map((opt, idx) => (\n            <label key={idx} style={{ display: 'block' }}>\n              <input\n                type=\"radio\"\n                name={q._id}\n                value={idx}\n                onChange={() =>\n                  setAnswers({ ...answers, [q._id.toString()]: idx }) // ✅ Use string key\n                }\n              />\n              {opt}\n            </label>\n          ))}\n        </div>\n      ))}\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  ) : <p>Loading...</p>;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}