{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R1\\\\Downloads\\\\MCQ_FULL\\\\mcq-system-full\\\\frontend\\\\src\\\\pages\\\\ExamPage.jsx\",\n  _s = $RefreshSig$();\n/*import { useParams, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function ExamPage() {\n  const { id } = useParams();\n  const [exam, setExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/exams/${id}`)\n      .then(res => setExam(res.data));\n  }, [id]);\n\n  const handleSubmit = async () => {\n    const payload = {\n      user: 'Anonymous',\n      exam_id: exam._id,\n      answers: exam.questions.map((q) => ({\n        question_id: q.question_id,\n        selected_option: answers[q._id] ?? -1 // default to -1 if not answered\n      }))\n    };\n \n    try {\n      const res = await axios.post('http://localhost:5000/api/results', payload);\n      console.log(payload)\n      navigate('/result', { state: { score: res.data.score } });\n    } catch (err) {\n      console.error('Submit error:', err);\n    }\n  };\n\n  return exam ? (\n    <div>\n      <h2>{exam.title}</h2>\n      {exam.questions.map((q, i) => (\n        <div key={q._id}>\n          <p>{i + 1}. {q.question_text}</p>\n          {q.options.map((opt, idx) => (\n            <label key={idx}>\n              <input\n                type=\"radio\"\n                name={q._id}\n                value={idx}\n                checked={answers[q._id] === idx}\n                onChange={() => setAnswers({ ...answers, [q._id]: idx })}\n              />\n              {opt}\n            </label>\n          ))}\n        </div>\n      ))}\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  ) : <p>Loading...</p>;\n}\n*/\n\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExamPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [exam, setExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n\n  // ✅ Fetch exam data on mount\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/exams/${id}`).then(res => setExam(res.data)).catch(err => console.error('❌ Error fetching exam:', err));\n  }, [id]);\n\n  // ✅ Submit answers to backend\n  const handleSubmit = async () => {\n    if (!exam) return;\n    const payload = {\n      user: 'Anonymous',\n      exam_id: exam._id,\n      answers: exam.questions.map(q => {\n        var _answers$q$_id;\n        return {\n          question_id: q._id,\n          // ✅ CORRECTED: Use q._id instead of q.question_id\n          selected_option: (_answers$q$_id = answers[q._id]) !== null && _answers$q$_id !== void 0 ? _answers$q$_id : -1 // default to -1 if unanswered\n        };\n      })\n    };\n    try {\n      const res = await axios.post('http://localhost:5000/api/results', payload);\n      console.log('✅ Submitted payload:', payload);\n      console.log('✅ Backend response:', res.data);\n      navigate('/result', {\n        state: {\n          score: res.data.score\n        }\n      });\n    } catch (err) {\n      console.error('❌ Submit error:', err);\n      alert('Error submitting your answers. Please try again.');\n    }\n  };\n\n  // ✅ Render the exam UI\n  return exam ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: exam.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: exam.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), exam.questions.map((q, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [i + 1, \". \", q.question_text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), q.options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: q._id,\n            value: idx,\n            checked: answers[q._id] === idx,\n            onChange: () => setAnswers({\n              ...answers,\n              [q._id]: idx\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), ` ${opt}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this))]\n    }, q._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      style: {\n        marginTop: '20px'\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading exam...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 7\n  }, this);\n}\n_s(ExamPage, \"R5xjSDjqXoa9hWkalIpw1Co282Y=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["useParams","useNavigate","useEffect","useState","axios","jsxDEV","_jsxDEV","ExamPage","_s","id","exam","setExam","answers","setAnswers","navigate","get","then","res","data","catch","err","console","error","handleSubmit","payload","user","exam_id","_id","questions","map","q","_answers$q$_id","question_id","selected_option","post","log","state","score","alert","style","padding","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","i","marginBottom","question_text","options","opt","idx","type","name","value","checked","onChange","onClick","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/R1/Downloads/MCQ_FULL/mcq-system-full/frontend/src/pages/ExamPage.jsx"],"sourcesContent":["/*import { useParams, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function ExamPage() {\n  const { id } = useParams();\n  const [exam, setExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/exams/${id}`)\n      .then(res => setExam(res.data));\n  }, [id]);\n\n  const handleSubmit = async () => {\n    const payload = {\n      user: 'Anonymous',\n      exam_id: exam._id,\n      answers: exam.questions.map((q) => ({\n        question_id: q.question_id,\n        selected_option: answers[q._id] ?? -1 // default to -1 if not answered\n      }))\n    };\n \n    try {\n      const res = await axios.post('http://localhost:5000/api/results', payload);\n      console.log(payload)\n      navigate('/result', { state: { score: res.data.score } });\n    } catch (err) {\n      console.error('Submit error:', err);\n    }\n  };\n\n  return exam ? (\n    <div>\n      <h2>{exam.title}</h2>\n      {exam.questions.map((q, i) => (\n        <div key={q._id}>\n          <p>{i + 1}. {q.question_text}</p>\n          {q.options.map((opt, idx) => (\n            <label key={idx}>\n              <input\n                type=\"radio\"\n                name={q._id}\n                value={idx}\n                checked={answers[q._id] === idx}\n                onChange={() => setAnswers({ ...answers, [q._id]: idx })}\n              />\n              {opt}\n            </label>\n          ))}\n        </div>\n      ))}\n      <button onClick={handleSubmit}>Submit</button>\n    </div>\n  ) : <p>Loading...</p>;\n}\n*/\n\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function ExamPage() {\n  const { id } = useParams();\n  const [exam, setExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n\n  // ✅ Fetch exam data on mount\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/exams/${id}`)\n      .then(res => setExam(res.data))\n      .catch(err => console.error('❌ Error fetching exam:', err));\n  }, [id]);\n\n  // ✅ Submit answers to backend\n  const handleSubmit = async () => {\n    if (!exam) return;\n\n    const payload = {\n      user: 'Anonymous',\n      exam_id: exam._id,\n      answers: exam.questions.map((q) => ({\n        question_id: q._id, // ✅ CORRECTED: Use q._id instead of q.question_id\n        selected_option: answers[q._id] ?? -1 // default to -1 if unanswered\n      }))\n    };\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/results', payload);\n      console.log('✅ Submitted payload:', payload);\n      console.log('✅ Backend response:', res.data);\n      navigate('/result', { state: { score: res.data.score } });\n    } catch (err) {\n      console.error('❌ Submit error:', err);\n      alert('Error submitting your answers. Please try again.');\n    }\n  };\n\n  // ✅ Render the exam UI\n  return exam ? (\n    <div style={{ padding: '20px' }}>\n      <h2>{exam.title}</h2>\n      <p>{exam.description}</p>\n\n      {exam.questions.map((q, i) => (\n        <div key={q._id} style={{ marginBottom: '20px' }}>\n          <p><strong>{i + 1}. {q.question_text}</strong></p>\n          {q.options.map((opt, idx) => (\n            <div key={idx}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name={q._id}\n                  value={idx}\n                  checked={answers[q._id] === idx}\n                  onChange={() => setAnswers({ ...answers, [q._id]: idx })}\n                />\n                {` ${opt}`}\n              </label>\n            </div>\n          ))}\n        </div>\n      ))}\n\n      <button onClick={handleSubmit} style={{ marginTop: '20px' }}>\n        Submit\n      </button>\n    </div>\n  ) : <p>Loading exam...</p>;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}