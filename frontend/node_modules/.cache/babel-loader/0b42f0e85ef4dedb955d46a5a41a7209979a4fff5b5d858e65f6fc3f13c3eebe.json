{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\R1\\\\Downloads\\\\MCQ_FULL\\\\mcq-system-full\\\\frontend\\\\src\\\\pages\\\\ExamPage.jsx\",\n  _s = $RefreshSig$();\n/*import { useParams, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function ExamPage() {\n  const { id } = useParams(); // exam_id from URL\n  const [exam, setExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/api/exams/${id}`)\n      .then((res) => setExam(res.data))\n      .catch((err) => {\n        console.error('Error fetching exam:', err);\n        alert('Failed to load exam!');\n      });\n  }, [id]);\n\n  const handleSubmit = async () => {\n    if (!exam) return;\n\n    const payload = {\n      user: 'Anonymous', // or set dynamically\n      exam_id: exam._id,\n      answers: exam.questions.map((q) => ({\n        question_id: q.question_id, // match this to backend logic\n        selected_option: answers[q.question_id] ?? -1\n      }))\n    };\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/results', payload);\n      navigate('/result', { state: { score: res.data.score } });\n    } catch (err) {\n      console.error('[❗ Submit Error]', err);\n      alert('Error submitting your answers.');\n    }\n  };\n\n  return (\n    <div>\n      {exam ? (\n        <div>\n          <h2>{exam.title}</h2>\n          <p>{exam.description}</p>\n          {exam.questions.map((q, idx) => (\n            <div key={q.question_id} style={{ marginBottom: '20px' }}>\n              <p>{idx + 1}. {q.question_text}</p>\n              {q.options.map((opt, i) => (\n                <label key={i} style={{ display: 'block' }}>\n                  <input\n                    type=\"radio\"\n                    name={`question-${q.question_id}`}\n                    value={i}\n                    checked={answers[q.question_id] === i}\n                    onChange={() =>\n                      setAnswers((prev) => ({\n                        ...prev,\n                        [q.question_id]: i\n                      }))\n                    }\n                  />\n                  {opt}\n                </label>\n              ))}\n            </div>\n          ))}\n          <button onClick={handleSubmit}>Submit</button>\n        </div>\n      ) : (\n        <p>Loading exam...</p>\n      )}\n    </div>\n  );\n}\n*/\n\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ExamPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [exam, setExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`http://localhost:5000/api/exams/${id}`).then(res => setExam(res.data)).catch(err => {\n      console.error('Error fetching exam:', err);\n      alert('Failed to load exam!');\n    });\n  }, [id]);\n  const handleSubmit = async () => {\n    if (!exam) return;\n    const payload = {\n      user: 'Anonymous',\n      exam_id: exam._id,\n      answers: exam.questions.map(q => {\n        var _answers$q$question_i;\n        return {\n          question_id: q.question_id,\n          selected_option: (_answers$q$question_i = answers[q.question_id]) !== null && _answers$q$question_i !== void 0 ? _answers$q$question_i : -1\n        };\n      })\n    };\n    try {\n      const res = await axios.post('http://localhost:5000/api/results', payload);\n      navigate('/result', {\n        state: {\n          score: res.data.score\n        }\n      });\n    } catch (err) {\n      console.error('[❗ Submit Error]', err);\n      alert('Error submitting your answers.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: 'linear-gradient(to right, #f7faff, #eef3f8)',\n      minHeight: '100vh',\n      padding: '40px 20px',\n      fontFamily: 'Segoe UI, sans-serif'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '800px',\n        margin: '0 auto',\n        background: '#fff',\n        padding: '30px',\n        borderRadius: '10px',\n        boxShadow: '0 4px 12px rgba(0,0,0,0.1)'\n      },\n      children: exam ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: '#2c3e50',\n            marginBottom: '10px'\n          },\n          children: exam.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginBottom: '30px',\n            color: '#555'\n          },\n          children: exam.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), exam.questions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '25px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: 'bold',\n              marginBottom: '10px'\n            },\n            children: [idx + 1, \". \", q.question_text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${q.question_id}`,\n              value: i,\n              checked: answers[q.question_id] === i,\n              onChange: () => setAnswers(prev => ({\n                ...prev,\n                [q.question_id]: i\n              })),\n              style: {\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }, this), opt]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this))]\n        }, q.question_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          style: {\n            backgroundColor: '#3498db',\n            color: 'white',\n            padding: '10px 25px',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer',\n            fontSize: '16px',\n            marginTop: '20px'\n          },\n          children: \"Submit Exam\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading exam...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(ExamPage, \"R5xjSDjqXoa9hWkalIpw1Co282Y=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ExamPage;\nvar _c;\n$RefreshReg$(_c, \"ExamPage\");","map":{"version":3,"names":["useParams","useNavigate","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ExamPage","_s","id","exam","setExam","answers","setAnswers","navigate","get","then","res","data","catch","err","console","error","alert","handleSubmit","payload","user","exam_id","_id","questions","map","q","_answers$q$question_i","question_id","selected_option","post","state","score","style","background","minHeight","padding","fontFamily","children","maxWidth","margin","borderRadius","boxShadow","color","marginBottom","title","fileName","_jsxFileName","lineNumber","columnNumber","description","idx","fontWeight","question_text","options","opt","i","display","type","name","value","checked","onChange","prev","marginRight","onClick","backgroundColor","border","cursor","fontSize","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/R1/Downloads/MCQ_FULL/mcq-system-full/frontend/src/pages/ExamPage.jsx"],"sourcesContent":["/*import { useParams, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function ExamPage() {\n  const { id } = useParams(); // exam_id from URL\n  const [exam, setExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/api/exams/${id}`)\n      .then((res) => setExam(res.data))\n      .catch((err) => {\n        console.error('Error fetching exam:', err);\n        alert('Failed to load exam!');\n      });\n  }, [id]);\n\n  const handleSubmit = async () => {\n    if (!exam) return;\n\n    const payload = {\n      user: 'Anonymous', // or set dynamically\n      exam_id: exam._id,\n      answers: exam.questions.map((q) => ({\n        question_id: q.question_id, // match this to backend logic\n        selected_option: answers[q.question_id] ?? -1\n      }))\n    };\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/results', payload);\n      navigate('/result', { state: { score: res.data.score } });\n    } catch (err) {\n      console.error('[❗ Submit Error]', err);\n      alert('Error submitting your answers.');\n    }\n  };\n\n  return (\n    <div>\n      {exam ? (\n        <div>\n          <h2>{exam.title}</h2>\n          <p>{exam.description}</p>\n          {exam.questions.map((q, idx) => (\n            <div key={q.question_id} style={{ marginBottom: '20px' }}>\n              <p>{idx + 1}. {q.question_text}</p>\n              {q.options.map((opt, i) => (\n                <label key={i} style={{ display: 'block' }}>\n                  <input\n                    type=\"radio\"\n                    name={`question-${q.question_id}`}\n                    value={i}\n                    checked={answers[q.question_id] === i}\n                    onChange={() =>\n                      setAnswers((prev) => ({\n                        ...prev,\n                        [q.question_id]: i\n                      }))\n                    }\n                  />\n                  {opt}\n                </label>\n              ))}\n            </div>\n          ))}\n          <button onClick={handleSubmit}>Submit</button>\n        </div>\n      ) : (\n        <p>Loading exam...</p>\n      )}\n    </div>\n  );\n}\n*/\n\n\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport default function ExamPage() {\n  const { id } = useParams();\n  const [exam, setExam] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:5000/api/exams/${id}`)\n      .then((res) => setExam(res.data))\n      .catch((err) => {\n        console.error('Error fetching exam:', err);\n        alert('Failed to load exam!');\n      });\n  }, [id]);\n\n  const handleSubmit = async () => {\n    if (!exam) return;\n\n    const payload = {\n      user: 'Anonymous',\n      exam_id: exam._id,\n      answers: exam.questions.map((q) => ({\n        question_id: q.question_id,\n        selected_option: answers[q.question_id] ?? -1,\n      })),\n    };\n\n    try {\n      const res = await axios.post('http://localhost:5000/api/results', payload);\n      navigate('/result', { state: { score: res.data.score } });\n    } catch (err) {\n      console.error('[❗ Submit Error]', err);\n      alert('Error submitting your answers.');\n    }\n  };\n\n  return (\n    <div\n      style={{\n        background: 'linear-gradient(to right, #f7faff, #eef3f8)',\n        minHeight: '100vh',\n        padding: '40px 20px',\n        fontFamily: 'Segoe UI, sans-serif',\n      }}\n    >\n      <div style={{ maxWidth: '800px', margin: '0 auto', background: '#fff', padding: '30px', borderRadius: '10px', boxShadow: '0 4px 12px rgba(0,0,0,0.1)' }}>\n        {exam ? (\n          <>\n            <h2 style={{ color: '#2c3e50', marginBottom: '10px' }}>{exam.title}</h2>\n            <p style={{ marginBottom: '30px', color: '#555' }}>{exam.description}</p>\n\n            {exam.questions.map((q, idx) => (\n              <div key={q.question_id} style={{ marginBottom: '25px' }}>\n                <p style={{ fontWeight: 'bold', marginBottom: '10px' }}>\n                  {idx + 1}. {q.question_text}\n                </p>\n                {q.options.map((opt, i) => (\n                  <label key={i} style={{ display: 'block', marginBottom: '8px' }}>\n                    <input\n                      type=\"radio\"\n                      name={`question-${q.question_id}`}\n                      value={i}\n                      checked={answers[q.question_id] === i}\n                      onChange={() =>\n                        setAnswers((prev) => ({\n                          ...prev,\n                          [q.question_id]: i,\n                        }))\n                      }\n                      style={{ marginRight: '10px' }}\n                    />\n                    {opt}\n                  </label>\n                ))}\n              </div>\n            ))}\n\n            <button\n              onClick={handleSubmit}\n              style={{\n                backgroundColor: '#3498db',\n                color: 'white',\n                padding: '10px 25px',\n                border: 'none',\n                borderRadius: '5px',\n                cursor: 'pointer',\n                fontSize: '16px',\n                marginTop: '20px',\n              }}\n            >\n              Submit Exam\n            </button>\n          </>\n        ) : (\n          <p>Loading exam...</p>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}